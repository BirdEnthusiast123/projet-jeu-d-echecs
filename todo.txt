/!\FINISH possible_moves.c add_move -> add_move_if_not_threatening_king /!\

possible moves:
    captures
    check:
        pin
        castle
    promotion
    en passant

detect checkmate
    king moves
    block w other piece
    capture checking piece
    detect stalemate/draw if no legal move

ia

set player side

advantage indicator

C:\Users\daYutu\AppData\Local\Programs\Python\Python310-32\python

free memory between py and c

atm board is initialized everytime moves are computed,
could store board and fen string in memory and strcmp 
the input fen string with stored string


int main()
{
	printf("hey\n");

	Game g;

	init_game_board(&g);

	char *fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR 0 KQkq - 0 0";
	parse_fen_string(&g, fen);
	print_game(&g);
	

	free_game_board(&g);
	
	Test* t = wrap_possible_moves("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR 0 KQkq - 0 0", 4, 2);
	printf("%d %d\n", t->arr[0], t->arr[1]);

	return 0;
}

DEPENDENCY : Game.king_pos is not updated when king is moved atm, only updated when parsing fen_string



test for checks (supposed both kings cant be in check at once):
	do move
	make sure king is not threatened:
		threatmap is copy of game :
			n == 0 means safe
			n > 0  means threatened by n foes
		computed by checking all of oponents possible moves:
			keep track of oponents pieces coordinates at the moment of the fen string parse
